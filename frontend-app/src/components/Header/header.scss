$numOfItems: 3;
$navAT: 1s;
$textDelayStep: 0.1s;
$font: Helvetica, Arial, sans-serif;
$btnSize: 50px;
$lineW: 28px;
$lineH: 4px;
$linesGap: 10px;
$linesTotalH: $lineH*2 + $linesGap;
$btnHorPad: ($btnSize - $lineW) / 2;
$btnVertPad: ($btnSize - $linesTotalH) / 2;
$itemsLeftPad: 10px;
$itemsRightPad: $itemsLeftPad + $btnSize;
$itemWidth: 85px;
$navItemsWidth: $itemsLeftPad + $itemsRightPad + $itemWidth * $numOfItems;
$textAT: $navAT - $textDelayStep * ($numOfItems - 1);
$textFadeAT: 0.2s;
$cub: cubic-bezier(.48,.43,.29,1.3);
$backCub: cubic-bezier(0.49,-0.3,.68,1.23);
$textCub: cubic-bezier(.48,.43,.7,2.5);

#blurry-filter {
  width: 100%;
  height: rem;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Cfilter id='f'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='4' numOctaves='1'/%3E%3C/filter%3E%3Crect width='100' height='100' style='filter:url(%23f)' opacity='.2'/%3E%3C/svg%3E");
  mask: linear-gradient(black 7rem, transparent);
  -webkit-mask: linear-gradient(black 7rem, transparent);
  backdrop-filter: blur(3px);
  -webkit-backdrop-filter: blur(3px);
  position: fixed;
  left: 0;
  top: 0;
  z-index: 1;
  pointer-events: none;
  touch-action: none;
}

body {
  margin: 0;
  padding: 0;
  background-color: #EEE;
  font-family: "Open Sans", sans-serif;
  box-sizing: border-box;
  cursor: default;
}

* {
  &, &:before, &:after {
    box-sizing: inherit;
  }
}

header {
  width: 100%;
  height: 8rem;
  position: sticky;
  top: 0;
  z-index: 1;

  > div {
    width: calc(100% - 3rem);
    height: 100%;
    margin: 0 auto;
    display: flex;
    align-items: center;
  }
}

#title {
  width: 100%;
  .parent {
    line-height: 1em;
	 padding-left: 2px;
    color: #666;
  }
  .name {
    font-size: 2em;
    font-weight: bold;
    color: #333;
    mix-blend-mode: difference;
  }
}

#reference {
  display: flex;
  
  > a {
    color: #444;
    
    & + a {
      margin-left: 1rem;
    }
  }
}

.nav {
  overflow: hidden;
  position: relative;
  width: auto;
  height: $btnSize;
  background: #fff;
  border-radius: 5px;
  box-shadow: 0 10px 35px rgba(0,0,0,0.2);

  &__cb {
    z-index: -1000;
    position: absolute;
    left: 0;
    top: 0;
    opacity: 0;
    pointer-events: none;
  }

  &__content {
    position: relative;
    width: $btnSize;
    height: 100%;
    transition: width $navAT $backCub;

    .nav__cb:checked ~ & {
      transition: width $navAT $cub;
      width: $navItemsWidth;
    }
  }

  &__items {
    position: relative;
    width: $navItemsWidth;
    height: 100%;
    padding-left: $itemsLeftPad;
    padding-right: $itemsRightPad;
    list-style-type: none;
    font-size: 0;
  }

  &__item {
    display: inline-block;
    vertical-align: top;
    width: $itemWidth;
    text-align: center;
    color: #6C7784;
    font-size: 14px;
    line-height: $btnSize;
    font-family: $font;
    font-weight: bold;
    perspective: 1000px;
    transition: color 0.3s;
    cursor: pointer;

    &:hover {
      color: #369eff;
    }

    &-text {
      display: block;
      height: 100%;
      transform: rotateY(-70deg);
      opacity: 0;
      transition: transform $textAT $textCub, opacity $textAT;

      .nav__cb:checked ~ .nav__content & {
        transform: rotateY(0);
        opacity: 1;
        transition: transform $textAT $textCub, opacity $textFadeAT;
      }

      @for $i from 1 through $numOfItems {
        .nav__item:nth-child(#{$i}) & {
          transition-delay: ($numOfItems - $i) * $textDelayStep;
        }

        .nav__cb:checked ~ .nav__content .nav__item:nth-child(#{$i}) & {
          transition-delay: ($i - 1) * $textDelayStep;
        }
      }
    }
  }

  &__btn {
    position: absolute;
    right: 0;
    top: 0;
    width: $btnSize;
    height: $btnSize;
    padding: $btnVertPad $btnHorPad;
    cursor: pointer;

    &:before,
    &:after {
      content: "";
      display: block;
      width: $lineW;
      height: $lineH;
      border-radius: 2px;
      background: #369eff;
      transform-origin: 50% 50%;
      transition: transform $navAT $cub, background-color 0.3s;
    }

    &:before {
      margin-bottom: $linesGap;
    }

    &:hover {
      &:before,
      &:after {
        background: #369eff;
      }
    }

    .nav__cb:checked ~ & {
      &:before {
        transform: translateY($linesGap/2 + $lineH/2) rotate(-225deg);
      }

      &:after {
        transform: translateY($linesGap/-2 + $lineH/-2) rotate(225deg);
      }
    }
  }
}

.nav__item {
	a {
	  text-decoration: none;
	  color: inherit;
	}
 }
 
main, #folders {
  width: calc(100% - 3rem);
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  grid-gap: 1.5rem;
}
#blurry-filter {
	width: 100%;
	height: 9rem;
	background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Cfilter id='f'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='4' numOctaves='1'/%3E%3C/filter%3E%3Crect width='100' height='100' style='filter:url(%23f)' opacity='.2'/%3E%3C/svg%3E");
	mask: linear-gradient(black 7rem, transparent);
	-webkit-mask: linear-gradient(black 7rem, transparent);
	backdrop-filter: blur(8px);
	-webkit-backdrop-filter: blur(8px);
	position: fixed;
	left: 0;
	top: 0;
	z-index: 1;
	pointer-events: none;
	touch-action: none;
}

