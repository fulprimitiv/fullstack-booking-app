services:
# --- Databases ---
    postgres:
        image: postgres:16.2-alpine
        container_name: postgres
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASS}
            POSTGRES_DB: main_db
        healthcheck:
            test: pg_isready -d main_db -U ${POSTGRES_USER}
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 5s
        ports:
            - 5432:5432
        networks:
            - app-network
        volumes:
            - postgres-data:/var/lib/postgresql/data
    minio:
        image: minio/minio:latest
        container_name: minio
        restart: unless-stopped
        command: server --console-address ":9001" /data/
        environment:
            MINIO_ROOT_USER: ${MINIO_USER}
            MINIO_ROOT_PASSWORD: ${MINIO_PASS}
        healthcheck:
            test: curl -f "http://localhost:9000/minio/health/live"
            interval: 10s
            timeout: 5s
            retries: 3
        ports:
            - 9000:9000
            - 9001:9001
        networks:
            - app-network
        volumes:
            - minio-data:/data
    createbuckets:
        image: minio/mc
        container_name: create_buckets
        profiles: [ create_buckets, full ]
        depends_on:
            minio:
                condition: service_healthy
        entrypoint: >
            /bin/sh -c "
            /usr/bin/mc config host add minio http://minio:9000 ${MINIO_USER} ${MINIO_PASS};
            /usr/bin/mc mb minio/default;
            exit 0;
            "
        networks:
            - app-network

volumes:
    postgres-data:
        name: postgres-data
        driver: local
    minio-data:
        name: minio-data
        driver: local

networks:
    app-network:
        name: app-network
        driver: bridge
