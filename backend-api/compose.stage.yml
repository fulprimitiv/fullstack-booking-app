services:
# Application containers
    backend-api:
        build:
            context: .
            dockerfile: Dockerfile
        image: booking-service/backend-api:latest
        container_name: backend-api
        env_file: .env
        environment:
            SPRING_PROFILES_ACTIVE: stage
        depends_on:
            postgres:
                condition: service_healthy
            minio:
                condition: service_healthy
        ports:
            - 8080:8080
        networks:
            - app-network
        volumes:
            - logs:/var/log/app
# Reverse-proxy Nginx + SSL
    nginx:
        image: nginx:1.27.2
        container_name: nginx
        restart: always
        depends_on:
            backend-api:
                condition: service_started
        ports:
            - 80:80
            - 8443:8443
        volumes:
            - ./nginx/stage:/etc/nginx/conf.d
            - web-root:/var/www/html
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            - ./dhparam:/etc/ssl/certs
        networks:
            - app-network
    certbot:
        image: certbot/certbot:latest
        container_name: certbot
        profiles: [ cert, full ]
        depends_on:
            - nginx
        volumes:
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            - web-root:/var/www/html
        command: certonly --webroot --webroot-path=/var/www/html --email akaunt.gmain@gmail.com --agree-tos --no-eff-email --force-renewal -d ${DOMAIN}
        networks:
            - app-network

volumes:
    logs:
        name: logs
        driver: local
    certbot-etc:
        name: certbot-etc
        driver: local
    certbot-var:
        name: certbot-var
        driver: local
    web-root:
        name: web-root
        driver: local

networks:
    app-network:
        name: app-network
        driver: bridge
